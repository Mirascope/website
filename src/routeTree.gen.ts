/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RouterWaitlistRouteImport } from './routes/router-waitlist'
import { Route as PrivacyRouteImport } from './routes/privacy'
import { Route as PricingRouteImport } from './routes/pricing'
import { Route as LlmsFullRouteImport } from './routes/llms-full'
import { Route as DevRouteImport } from './routes/dev'
import { Route as R404RouteImport } from './routes/404'
import { Route as CatchallRouteImport } from './routes/$catchall'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TermsIndexRouteImport } from './routes/terms/index'
import { Route as DocsIndexRouteImport } from './routes/docs.index'
import { Route as DevIndexRouteImport } from './routes/dev/index'
import { Route as BlogIndexRouteImport } from './routes/blog.index'
import { Route as TermsUseRouteImport } from './routes/terms/use'
import { Route as TermsServiceRouteImport } from './routes/terms/service'
import { Route as DocsSplatRouteImport } from './routes/docs.$'
import { Route as DevSocialCardRouteImport } from './routes/dev/social-card'
import { Route as DevLayoutTestRouteImport } from './routes/dev/layout-test'
import { Route as DevAuditMetadataRouteImport } from './routes/dev/audit-metadata'
import { Route as DevSlugRouteImport } from './routes/dev.$slug'
import { Route as BlogSlugRouteImport } from './routes/blog.$slug'
import { Route as DocsProductLlmsFullRouteImport } from './routes/docs.$product.llms-full'
import { Route as DocsMirascopeV2LlmsFullRouteImport } from './routes/docs.mirascope.v2.llms-full'

const RouterWaitlistRoute = RouterWaitlistRouteImport.update({
  id: '/router-waitlist',
  path: '/router-waitlist',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyRoute = PrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const PricingRoute = PricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRouteImport,
} as any)
const LlmsFullRoute = LlmsFullRouteImport.update({
  id: '/llms-full',
  path: '/llms-full',
  getParentRoute: () => rootRouteImport,
} as any)
const DevRoute = DevRouteImport.update({
  id: '/dev',
  path: '/dev',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const CatchallRoute = CatchallRouteImport.update({
  id: '/$catchall',
  path: '/$catchall',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TermsIndexRoute = TermsIndexRouteImport.update({
  id: '/terms/',
  path: '/terms/',
  getParentRoute: () => rootRouteImport,
} as any)
const DocsIndexRoute = DocsIndexRouteImport.update({
  id: '/docs/',
  path: '/docs/',
  getParentRoute: () => rootRouteImport,
} as any)
const DevIndexRoute = DevIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DevRoute,
} as any)
const BlogIndexRoute = BlogIndexRouteImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRouteImport,
} as any)
const TermsUseRoute = TermsUseRouteImport.update({
  id: '/terms/use',
  path: '/terms/use',
  getParentRoute: () => rootRouteImport,
} as any)
const TermsServiceRoute = TermsServiceRouteImport.update({
  id: '/terms/service',
  path: '/terms/service',
  getParentRoute: () => rootRouteImport,
} as any)
const DocsSplatRoute = DocsSplatRouteImport.update({
  id: '/docs/$',
  path: '/docs/$',
  getParentRoute: () => rootRouteImport,
} as any)
const DevSocialCardRoute = DevSocialCardRouteImport.update({
  id: '/social-card',
  path: '/social-card',
  getParentRoute: () => DevRoute,
} as any)
const DevLayoutTestRoute = DevLayoutTestRouteImport.update({
  id: '/layout-test',
  path: '/layout-test',
  getParentRoute: () => DevRoute,
} as any)
const DevAuditMetadataRoute = DevAuditMetadataRouteImport.update({
  id: '/audit-metadata',
  path: '/audit-metadata',
  getParentRoute: () => DevRoute,
} as any)
const DevSlugRoute = DevSlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => DevRoute,
} as any)
const BlogSlugRoute = BlogSlugRouteImport.update({
  id: '/blog/$slug',
  path: '/blog/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const DocsProductLlmsFullRoute = DocsProductLlmsFullRouteImport.update({
  id: '/docs/$product/llms-full',
  path: '/docs/$product/llms-full',
  getParentRoute: () => rootRouteImport,
} as any)
const DocsMirascopeV2LlmsFullRoute = DocsMirascopeV2LlmsFullRouteImport.update({
  id: '/docs/mirascope/v2/llms-full',
  path: '/docs/mirascope/v2/llms-full',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$catchall': typeof CatchallRoute
  '/404': typeof R404Route
  '/dev': typeof DevRouteWithChildren
  '/llms-full': typeof LlmsFullRoute
  '/pricing': typeof PricingRoute
  '/privacy': typeof PrivacyRoute
  '/router-waitlist': typeof RouterWaitlistRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/dev/$slug': typeof DevSlugRoute
  '/dev/audit-metadata': typeof DevAuditMetadataRoute
  '/dev/layout-test': typeof DevLayoutTestRoute
  '/dev/social-card': typeof DevSocialCardRoute
  '/docs/$': typeof DocsSplatRoute
  '/terms/service': typeof TermsServiceRoute
  '/terms/use': typeof TermsUseRoute
  '/blog': typeof BlogIndexRoute
  '/dev/': typeof DevIndexRoute
  '/docs': typeof DocsIndexRoute
  '/terms': typeof TermsIndexRoute
  '/docs/$product/llms-full': typeof DocsProductLlmsFullRoute
  '/docs/mirascope/v2/llms-full': typeof DocsMirascopeV2LlmsFullRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$catchall': typeof CatchallRoute
  '/404': typeof R404Route
  '/llms-full': typeof LlmsFullRoute
  '/pricing': typeof PricingRoute
  '/privacy': typeof PrivacyRoute
  '/router-waitlist': typeof RouterWaitlistRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/dev/$slug': typeof DevSlugRoute
  '/dev/audit-metadata': typeof DevAuditMetadataRoute
  '/dev/layout-test': typeof DevLayoutTestRoute
  '/dev/social-card': typeof DevSocialCardRoute
  '/docs/$': typeof DocsSplatRoute
  '/terms/service': typeof TermsServiceRoute
  '/terms/use': typeof TermsUseRoute
  '/blog': typeof BlogIndexRoute
  '/dev': typeof DevIndexRoute
  '/docs': typeof DocsIndexRoute
  '/terms': typeof TermsIndexRoute
  '/docs/$product/llms-full': typeof DocsProductLlmsFullRoute
  '/docs/mirascope/v2/llms-full': typeof DocsMirascopeV2LlmsFullRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$catchall': typeof CatchallRoute
  '/404': typeof R404Route
  '/dev': typeof DevRouteWithChildren
  '/llms-full': typeof LlmsFullRoute
  '/pricing': typeof PricingRoute
  '/privacy': typeof PrivacyRoute
  '/router-waitlist': typeof RouterWaitlistRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/dev/$slug': typeof DevSlugRoute
  '/dev/audit-metadata': typeof DevAuditMetadataRoute
  '/dev/layout-test': typeof DevLayoutTestRoute
  '/dev/social-card': typeof DevSocialCardRoute
  '/docs/$': typeof DocsSplatRoute
  '/terms/service': typeof TermsServiceRoute
  '/terms/use': typeof TermsUseRoute
  '/blog/': typeof BlogIndexRoute
  '/dev/': typeof DevIndexRoute
  '/docs/': typeof DocsIndexRoute
  '/terms/': typeof TermsIndexRoute
  '/docs/$product/llms-full': typeof DocsProductLlmsFullRoute
  '/docs/mirascope/v2/llms-full': typeof DocsMirascopeV2LlmsFullRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$catchall'
    | '/404'
    | '/dev'
    | '/llms-full'
    | '/pricing'
    | '/privacy'
    | '/router-waitlist'
    | '/blog/$slug'
    | '/dev/$slug'
    | '/dev/audit-metadata'
    | '/dev/layout-test'
    | '/dev/social-card'
    | '/docs/$'
    | '/terms/service'
    | '/terms/use'
    | '/blog'
    | '/dev/'
    | '/docs'
    | '/terms'
    | '/docs/$product/llms-full'
    | '/docs/mirascope/v2/llms-full'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$catchall'
    | '/404'
    | '/llms-full'
    | '/pricing'
    | '/privacy'
    | '/router-waitlist'
    | '/blog/$slug'
    | '/dev/$slug'
    | '/dev/audit-metadata'
    | '/dev/layout-test'
    | '/dev/social-card'
    | '/docs/$'
    | '/terms/service'
    | '/terms/use'
    | '/blog'
    | '/dev'
    | '/docs'
    | '/terms'
    | '/docs/$product/llms-full'
    | '/docs/mirascope/v2/llms-full'
  id:
    | '__root__'
    | '/'
    | '/$catchall'
    | '/404'
    | '/dev'
    | '/llms-full'
    | '/pricing'
    | '/privacy'
    | '/router-waitlist'
    | '/blog/$slug'
    | '/dev/$slug'
    | '/dev/audit-metadata'
    | '/dev/layout-test'
    | '/dev/social-card'
    | '/docs/$'
    | '/terms/service'
    | '/terms/use'
    | '/blog/'
    | '/dev/'
    | '/docs/'
    | '/terms/'
    | '/docs/$product/llms-full'
    | '/docs/mirascope/v2/llms-full'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CatchallRoute: typeof CatchallRoute
  R404Route: typeof R404Route
  DevRoute: typeof DevRouteWithChildren
  LlmsFullRoute: typeof LlmsFullRoute
  PricingRoute: typeof PricingRoute
  PrivacyRoute: typeof PrivacyRoute
  RouterWaitlistRoute: typeof RouterWaitlistRoute
  BlogSlugRoute: typeof BlogSlugRoute
  DocsSplatRoute: typeof DocsSplatRoute
  TermsServiceRoute: typeof TermsServiceRoute
  TermsUseRoute: typeof TermsUseRoute
  BlogIndexRoute: typeof BlogIndexRoute
  DocsIndexRoute: typeof DocsIndexRoute
  TermsIndexRoute: typeof TermsIndexRoute
  DocsProductLlmsFullRoute: typeof DocsProductLlmsFullRoute
  DocsMirascopeV2LlmsFullRoute: typeof DocsMirascopeV2LlmsFullRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/router-waitlist': {
      id: '/router-waitlist'
      path: '/router-waitlist'
      fullPath: '/router-waitlist'
      preLoaderRoute: typeof RouterWaitlistRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/llms-full': {
      id: '/llms-full'
      path: '/llms-full'
      fullPath: '/llms-full'
      preLoaderRoute: typeof LlmsFullRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dev': {
      id: '/dev'
      path: '/dev'
      fullPath: '/dev'
      preLoaderRoute: typeof DevRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$catchall': {
      id: '/$catchall'
      path: '/$catchall'
      fullPath: '/$catchall'
      preLoaderRoute: typeof CatchallRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/terms/': {
      id: '/terms/'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/docs/': {
      id: '/docs/'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dev/': {
      id: '/dev/'
      path: '/'
      fullPath: '/dev/'
      preLoaderRoute: typeof DevIndexRouteImport
      parentRoute: typeof DevRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/terms/use': {
      id: '/terms/use'
      path: '/terms/use'
      fullPath: '/terms/use'
      preLoaderRoute: typeof TermsUseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/terms/service': {
      id: '/terms/service'
      path: '/terms/service'
      fullPath: '/terms/service'
      preLoaderRoute: typeof TermsServiceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/docs/$': {
      id: '/docs/$'
      path: '/docs/$'
      fullPath: '/docs/$'
      preLoaderRoute: typeof DocsSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dev/social-card': {
      id: '/dev/social-card'
      path: '/social-card'
      fullPath: '/dev/social-card'
      preLoaderRoute: typeof DevSocialCardRouteImport
      parentRoute: typeof DevRoute
    }
    '/dev/layout-test': {
      id: '/dev/layout-test'
      path: '/layout-test'
      fullPath: '/dev/layout-test'
      preLoaderRoute: typeof DevLayoutTestRouteImport
      parentRoute: typeof DevRoute
    }
    '/dev/audit-metadata': {
      id: '/dev/audit-metadata'
      path: '/audit-metadata'
      fullPath: '/dev/audit-metadata'
      preLoaderRoute: typeof DevAuditMetadataRouteImport
      parentRoute: typeof DevRoute
    }
    '/dev/$slug': {
      id: '/dev/$slug'
      path: '/$slug'
      fullPath: '/dev/$slug'
      preLoaderRoute: typeof DevSlugRouteImport
      parentRoute: typeof DevRoute
    }
    '/blog/$slug': {
      id: '/blog/$slug'
      path: '/blog/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof BlogSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/docs/$product/llms-full': {
      id: '/docs/$product/llms-full'
      path: '/docs/$product/llms-full'
      fullPath: '/docs/$product/llms-full'
      preLoaderRoute: typeof DocsProductLlmsFullRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/docs/mirascope/v2/llms-full': {
      id: '/docs/mirascope/v2/llms-full'
      path: '/docs/mirascope/v2/llms-full'
      fullPath: '/docs/mirascope/v2/llms-full'
      preLoaderRoute: typeof DocsMirascopeV2LlmsFullRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface DevRouteChildren {
  DevSlugRoute: typeof DevSlugRoute
  DevAuditMetadataRoute: typeof DevAuditMetadataRoute
  DevLayoutTestRoute: typeof DevLayoutTestRoute
  DevSocialCardRoute: typeof DevSocialCardRoute
  DevIndexRoute: typeof DevIndexRoute
}

const DevRouteChildren: DevRouteChildren = {
  DevSlugRoute: DevSlugRoute,
  DevAuditMetadataRoute: DevAuditMetadataRoute,
  DevLayoutTestRoute: DevLayoutTestRoute,
  DevSocialCardRoute: DevSocialCardRoute,
  DevIndexRoute: DevIndexRoute,
}

const DevRouteWithChildren = DevRoute._addFileChildren(DevRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CatchallRoute: CatchallRoute,
  R404Route: R404Route,
  DevRoute: DevRouteWithChildren,
  LlmsFullRoute: LlmsFullRoute,
  PricingRoute: PricingRoute,
  PrivacyRoute: PrivacyRoute,
  RouterWaitlistRoute: RouterWaitlistRoute,
  BlogSlugRoute: BlogSlugRoute,
  DocsSplatRoute: DocsSplatRoute,
  TermsServiceRoute: TermsServiceRoute,
  TermsUseRoute: TermsUseRoute,
  BlogIndexRoute: BlogIndexRoute,
  DocsIndexRoute: DocsIndexRoute,
  TermsIndexRoute: TermsIndexRoute,
  DocsProductLlmsFullRoute: DocsProductLlmsFullRoute,
  DocsMirascopeV2LlmsFullRoute: DocsMirascopeV2LlmsFullRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
